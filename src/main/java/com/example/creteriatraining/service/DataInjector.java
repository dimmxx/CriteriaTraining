package com.example.creteriatraining.service;

import com.example.creteriatraining.domain.Course;
import com.example.creteriatraining.domain.Passport;
import com.example.creteriatraining.domain.Review;
import com.example.creteriatraining.domain.Student;
import com.example.creteriatraining.repository.CourseRepository;
import com.example.creteriatraining.repository.StudentRepository;
import com.example.creteriatraining.repository.creteria.CourseSpecifications;
import com.example.creteriatraining.service.util.LibraryReader;
import org.springframework.boot.context.event.ApplicationReadyEvent;
import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Service;

import java.nio.charset.Charset;
import java.util.List;
import java.util.Locale;
import java.util.stream.Collectors;

import static com.example.creteriatraining.service.util.RandomGen.randomGen;

@Service
public class DataInjector {

    private final StudentRepository studentRepository;
    private final CourseRepository courseRepository;

    private final List<String> courseNames = List.of("Algebra", "Chemistry", "Biology", "Philosophy", "Physics", "Literature", "History");
    private final List<String> reviews = LibraryReader.readFile("src/main/resources/library.md", Charset.defaultCharset());
    private final List<String> thirdNames = List.of("Ильич", "Львович", "Юрьевич", "Глебович", "Егорович", "Ефимович", "Иванович", "Игоревич", "Маркович", "Наумович", "Олегович", "Павлович", "Петрович", "Андреевич", "Антонович", "Артемович", "Борисович", "Вадимович", "Давыдович", "Данилович", "Денисович", "Иосифович", "Корнеевич", "Макарович", "Матвеевич", "Назарович", "Романович", "Семенович", "Сергеевич", "Тарасович", "Тихонович", "Федорович", "Яковлевич", "Алексеевич", "Аркадьевич", "Арсеньевич", "Богданович", "Валериевич", "Васильевич", "Викторович", "Витальевич", "Гаврилович", "Георгиевич", "Дмитриевич", "Евгеньевич", "Кириллович", "Леонидович", "Максимович", "Михайлович", "Николаевич", "Платонович", "Робертович", "Родионович", "Савельевич", "Степанович", "Тимофеевич", "Феликсович", "Филиппович", "Эдуардович", "Анатольевич", "Афанасьевич", "Геннадиевич", "Григорьевич", "Емельянович", "Ярославович", "Валентинович", "Владимирович", "Всеволодович", "Вячеславович", "Митрофанович", "Александрович", "Станиславович", "Константинович");
    private final List<String> firstNames = List.of("Абрам", "Аваз", "Аввакум", "Август", "Авдей", "Авраам", "Автандил", "Агап", "Агафон", "Аггей", "Адам", "Адис", "Адольф", "Адриан", "Азамат", "Азарий", "Азат", "Айдар", "Айнур", "Айрат", "Акакий", "Аким", "Алан", "Александр", "Алексей", "Али", "Алихан", "Алмаз", "Альберт", "Альфред", "Амадей", "Амадеус", "Амаяк", "Амвросий", "Амин", "Анатолий", "Анвар", "Ангел", "Андрей", "Андрэ", "Аникита", "Антон", "Ануфрий", "Анфим", "Аполлинарий", "Арам", "Аристарх", "Аркадий", "Арман", "Армен", "Арно", "Арнольд", "Арон", "Арсен", "Арсений", "Арслан", "Артем", "Артемий", "Артур", "Архип", "Аскольд", "Афанасий", "Ахмет", "Ашот", "Бахрам", "Бежен", "Бенедикт", "Берек", "Бернар", "Богдан", "Боголюб", "Бонифаций", "Бореслав", "Борис", "Борислав", "Боян", "Бронислав", "Бруно", "Булат", "Вадим", "Валентин", "Валерий", "Вальдемар", "Вальтер", "Вардан", "Варлаам", "Варфоломей", "Василий", "Ватслав", "Велизар", "Велор", "Венедикт", "Вениамин", "Викентий", "Виктор", "Вилен", "Вилли", "Вильгельм", "Виссарион", "Виталий", "Витаутас", "Витольд", "Владимир", "Владислав", "Владлен", "Влас", "Володар", "Всеволод", "Вячеслав", "Гавриил", "Галактион", "Гамлет", "Гарри", "Гаяс", "Гевор", "Геворг", "Геннадий", "Генри", "Генрих", "Георгий", "Геральд", "Герасим", "Герман", "Глеб", "Гоар", "Гордей", "Гордон", "Горислав", "Градимир", "Григорий", "Гурий", "Густав", "Давид", "Давлат", "Дамир", "Даниил", "Данислав", "Даньяр", "Демид", "Демьян", "Денис", "Джамал", "Джеймс", "Джереми", "Джозеф", "Джордан", "Джорж", "Дик", "Динар", "Динасий", "Дмитрий", "Добрыня", "Дональд", "Донат", "Донатос", "Дорофей", "Евгений", "Евграф", "Евдоким", "Евсей", "Евстафий", "Егор", "Елизар", "Елисей", "Емельян", "Еремей", "Ермолай", "Ерофей", "Ефим", "Ефрем", "Жан", "Ждан", "Жерар", "Закир", "Замир", "Заур", "Захар", "Зенон", "Зигмунд", "Зиновий", "Зураб", "Ибрагим", "Иван", "Игнат", "Игнатий", "Игорь", "Иероним", "Измаил", "Израиль", "Илиан", "Илларион", "Ильхам", "Ильшат", "Илья", "Ильяс", "Инокентий", "Иоаким", "Иоанн", "Ион", "Иосиф", "Ипполит", "Ираклий", "Иса", "Исаак", "Исидор", "Искандер", "Ислам", "Исмаил", "Казбек", "Казимир", "Камиль", "Карен", "Карим", "Карл", "Ким", "Кир", "Кирилл", "Клавдий", "Клаус", "Клим", "Климент", "Клод", "Кондрат", "Константин", "Корней", "Корнилий", "Кузьма", "Лавр", "Лаврентий", "Лазарь", "Лев", "Леван", "Левон", "Ленар", "Леон", "Леонард", "Леонид", "Леонтий", "Леопольд", "Лука", "Лукьян", "Любим", "Любомир", "Людвиг", "Люсьен", "Люций", "Мавлюда", "Мадлен", "Май", "Майкл", "Макар", "Макарий", "Максим", "Максимильян", "Максуд", "Мансур", "Мануил", "Мар", "Марат", "Мариан", "Марк", "Марсель", "Мартин", "Матвей", "Махмуд", "Мераб", "Мефодий", "Мечеслав", "Микула", "Милан", "Мирон", "Мирослав", "Митрофан", "Михаил", "Мишлов", "Модест", "Моисей", "Мстислав", "Мурат", "Муслим", "Мухаммед", "Назар", "Назарий", "Наиль", "Натан", "Наум", "Нестор", "Никанор", "Никита", "Никифор", "Никодим", "Никола", "Николай", "Никон", "Нильс", "Нисон", "Нифонт", "Норманн", "Овидий", "Олан", "Олег", "Олесь", "Онисим", "Орест", "Орландо", "Осип", "Оскар", "Остап", "Павел", "Панкрат", "Парамон", "Петр", "Платон", "Порфирий", "Потап", "Прокофий", "Прохор", "Равиль", "Радий", "Радик", "Радомир", "Радослав", "Разиль", "Раис", "Райан", "Раймонд", "Рамазан", "Рамиз", "Рамиль", "Рамон", "Ранель", "Расим", "Расул", "Ратибор", "Ратмир", "Рафаил", "Рафаэль", "Рафик", "Рашид", "Рем", "Ринат", "Рифат", "Рихард", "Ричард", "Роберт", "Родион", "Ролан", "Роман", "Ростислав", "Рубен", "Рудольф", "Руслан", "Рустам", "Руфин", "Рушан", "Рэй", "Сабир", "Савва", "Савелий", "Самвел", "Самсон", "Самуил", "Святослав", "Севастьян", "Северин", "Семен", "Серафим", "Сергей", "Сидор", "Сократ", "Соломон", "Спартак", "Спиридон", "Стакрат", "Станислав", "Степан", "Стефан", "Стивен", "Стоян", "Султан", "Тагир", "Таис", "Тайлер", "Талик", "Тамаз", "Тамерлан", "Тарас", "Тельман", "Теодор", "Терентий", "Тибор", "Тиграм", "Тигран", "Тигрий", "Тимофей", "Тимур", "Тит", "Тихон", "Томас", "Трифон", "Трофим", "Ульманас", "Умар", "Устин", "Фадей", "Фазиль", "Фанис", "Фарид", "Фархад", "Федор", "Федот", "Феликс", "Феодосий", "Фердинанд", "Фидель", "Филимон", "Филипп", "Флорентий", "Фома", "Франц", "Фред", "Фридрих", "Фуад", "Хабиб", "Хаким", "Харитон", "Христиан", "Христос", "Христофор", "Цезарь", "Чарльз", "Чеслав", "Чингиз", "Шамиль", "Шарль", "Эдвард", "Эдгар", "Эдмунд", "Эдуард", "Эльдар", "Эмиль", "Эмин", "Эммануил", "Эраст", "Эрик", "Эрнест", "Юлиан", "Юлий", "Юнус", "Юрий", "Юхим", "Яков", "Ян", "Януарий", "Ярослав", "Ясон");
    private final List<String> lastNames = List.of("Буш", "Рэй", "Цой", "Бёрк", "Блок", "Грин", "Дефо", "Дюма", "Кинг", "Кюри", "Мень", "Найт", "Питт", "Радд", "Смит", "Фрич", "Хилл", "Адамс", "Алиев", "Ашлаг", "Барнс", "Белов", "Бойко", "Браун", "Бунин", "Быков", "Бэкон", "Вольф", "Ганди", "Гачев", "Гусев", "Керри", "Перес", "Попов", "Скотт", "Уоттс", "Уэллс", "Файнс", "Фишер", "Шмидт", "Элиот", "Бабкин", "Бронте", "Гонкур", "Гофман", "Дарвин", "Джеймс", "Дункан", "Жуандо", "Зайцев", "Зубков", "Зыкина", "Иванов", "Капица", "Картер", "Козлов", "Леонов", "Майков", "Нартов", "Немцов", "Павлов", "Паркер", "Песков", "Райкин", "Саакян", "Собчак", "Тейлор", "Тойнби", "Турчин", "Уилсон", "Фадеев", "Фармер", "Франке", "Франко", "Фудель", "Хантер", "Аксаков", "Андреев", "Баталов", "Берроуз", "Герберт", "Гумилёв", "Дворжак", "Джексон", "Джонсон", "Ерофеев", "Ефремов", "Калугин", "Карнеги", "Клинтон", "Краснов", "Крючков", "Лайтман", "Любимов", "Миронов", "Морозов", "Мурадов", "Олейник", "Сергеев", "Тихонов", "Толстой", "Уильямс", "Фёдоров", "Фридман", "Хаббард", "Чудаков", "Шпиллер", "Шульгин", "Шумахер", "Аккерман", "Бабушкин", "Бехтерев", "Васильев", "Гинзбург", "Глазунов", "Дмитриев", "Кочетков", "Леонтьев", "Максимов", "Масляков", "Михалков", "Распутин", "Рузвельт", "Савояров", "Смышляев", "Соловьёв", "Трауберг", "Фергюсон", "Абрамович", "Аверинцев", "Авраменко", "Алейников", "Алексеева", "Армстронг", "Богомолов", "Ворошилов", "Григорьев", "Гумбольдт", "Декурсель", "Дымарский", "Жуковский", "Звягинцев", "Любарская", "Любарский", "Образцов", "Олейников", "Расулзаде", "Резерфорд", "Сумароков", "Чуковский", "Шкловский", "Эддингтон", "Вишневский", "Митрофанов", "Островский", "Рубинштейн");

    private final String[] alphabet = "a b c d e f g h i j k l m n o p q r s t u v w x y z".toUpperCase(Locale.ROOT).split(" ", -1);

    public DataInjector(StudentRepository studentRepository, CourseRepository courseRepository) {
        this.studentRepository = studentRepository;
        this.courseRepository = courseRepository;
    }

    public String generateRandomFirstName() {
        return firstNames.get(randomGen(0, firstNames.size() - 1));
    }

    public String generateRandomLastName() {
        return lastNames.get(randomGen(0, lastNames.size() -1));
    }

    public String generateRandomThirdName() {
        return thirdNames.get(randomGen(0, thirdNames.size() - 1));
    }

    @EventListener(ApplicationReadyEvent.class)
    public void injectData() {

        List<Course> courses = courseNames.stream().map(Course::new).collect(Collectors.toList());

        for (Course course : courses) {
            for (int i = 0; i < randomGen(10, 40); i++) {
                Student student = new Student();
                student.setLastName(generateRandomLastName());
                student.setFirstName(generateRandomFirstName());
                student.setThirdName(generateRandomThirdName());
                fetchPassport(student);
                course.addStudent(student);
                courseRepository.save(course);
            }
            fetchReviews(course);
        }
        List<Course> courses1 = courseRepository.findAll(CourseSpecifications.nameLike("ge"));
    }

    public void truncateDataBase(){
        courseRepository.deleteAll();
    }

    private void fetchPassport(Student student) {
        Passport passport = new Passport();
        passport.setPassportSerial(alphabet[randomGen(0, alphabet.length - 1)] +
            alphabet[randomGen(0, alphabet.length - 1)] + " " + randomGen(100000, 999999));
        student.setPassport(passport);
        passport.setStudent(student);
    }

    private void fetchReviews(Course course) {
        for (int i = 0; i < randomGen(0, 20); i++) {
            Review review = new Review(reviews.get(randomGen(0, reviews.size() - 1)), course);
            course.getReviews().add(review);
        }
    }
}
